#include <IRremote.h>
#include <dht.h>
#include <LiquidCrystal.h>

#define LM35 A0
#define DHT11 7

//LiquidCrystal lcd(12,11,5,4,3,2);			//构造一个LiquidCrystal的类成员。使用数字IO ，12,11,5,4,3,2
//dht DHT;
IRsend irsend;
//
//int val = 0;				//存放AD变量值
//float temp = 0;			        //存放温度值的10倍
//int chk = 0;

//unsigned int rawCodes_ac_24[199] = {4500,4400,600,1600,550,550,550,1650,550,1650,550,500,600,500,600,1600,550,550,550,550,550,1650,550,500,600,500,600,1600,550,1650,550,500,600,1650,550,1600,600,500,550,550,550,1650,550,1650,550,1600,600,1600,550,1650,550,500,600,1600,600,1600,600,500,550,550,550,550,550,550,550,500,600,500,600,1600,600,500,550,550,550,550,550,550,550,500,600,500,600,1600,600,500,550,1650,550,1650,550,1600,600,1600,600,1600,550,1650,550,5250,4500,4400,600,1600,600,500,550,1650,550,1650,550,500,600,500,600,1600,600,500,550,550,550,1650,550,500,600,500,600,1600,600,1600,550,550,550,1650,550,1600,600,500,600,500,600,1600,550,1650,550,1600,600,1600,600,1600,550,550,550,1650,550,1600,600,500,600,500,550,550,550,550,550,550,550,500,600,1600,600,500,600,500,550,550,550,550,550,550,550,500,600,1600,600,500,600,1600,550,1650,550,1650,550,1600,600,1600,550,1650,550};

//unsigned int rawCodes_ac_28[199] = {4450,4450,550,1600,600,500,600,1600,600,1600,550,550,550,550,550,1600,600,500,600,500,600,1600,550,550,550,550,550,1650,550,1600,600,500,600,1600,550,1650,550,500,600,500,600,1600,600,1600,550,1650,550,1650,550,1600,600,500,600,1600,550,1650,550,500,600,500,600,500,600,500,600,500,550,1650,550,500,600,500,600,550,550,500,600,500,600,500,550,550,550,550,550,1650,550,1650,550,1600,600,1600,550,1650,550,1650,550,1600,600,5250,4450,4450,550,1650,550,500,600,1650,550,1600,600,500,550,550,550,1650,550,500,600,500,600,1600,600,500,550,550,550,1650,550,1650,550,500,600,1600,600,1600,550,550,550,500,600,1650,550,1600,600,1600,550,1650,550,1650,550,500,600,1600,550,1650,550,550,550,500,600,500,600,500,600,500,600,1600,550,550,550,550,550,500,600,500,600,500,600,500,600,500,600,500,550,1650,550,1650,550,1600,600,1600,550,1650,550,1650,550,1600,600};

//unsigned int rawCodes_ac_29[199] = {4500,4400,600,1600,550,550,550,1650,550,1650,550,500,600,500,600,1600,550,550,550,550,550,1650,550,500,600,500,600,1600,550,1650,550,500,600,1650,550,1600,600,500,550,550,550,1650,550,1650,550,1600,600,1600,550,1650,550,500,600,1600,600,1600,600,500,550,550,550,550,550,550,550,500,550,1650,550,550,550,1650,550,550,550,550,550,550,550,500,600,500,550,550,550,1650,550,550,550,1650,550,1600,600,1600,600,1600,550,1650,550,5250,4500,4400,600,1600,550,550,550,1650,550,1650,550,500,600,500,600,1600,550,550,550,550,550,1650,550,500,600,500,600,1600,550,1650,550,500,600,1650,550,1600,600,500,550,550,550,1650,550,1650,550,1600,600,1600,550,1650,550,500,600,1600,600,1600,600,500,550,550,550,550,550,550,550,500,550,1650,550,550,550,1650,550,550,550,550,550,550,550,500,600,500,550,550,550,1650,550,550,550,1650,550,1600,600,1600,600,1600,550,1650,550};

void setup()
{ 
  
//  lcd.begin(16,2);		//初始化LCD1602
//  lcd.print("Welcome to use!");		//液晶显示Welcome to use！
//  delay(1000);				//延时1000ms
//  lcd.clear();				//液晶清屏
  
  // IR send
  irsend.sendMidea(0xb24d9f60a05fLL, 48);
//  irsend.sendRaw(rawCodes_ac_29, 199, 38);
//  lcd.clear();
//  lcd.print("29 send");
//  delay(4000);
//  irsend.sendRaw(rawCodes_ac_28, 199, 38);
//  lcd.clear();
//  lcd.print("28 send");
}

void loop()
{
//  // LM35
//  val = analogRead(LM35);		//读取AD值
//  temp = val * 4.8876;			//转换为温度值的10倍，有利于液晶显示
//  lcd.setCursor(0,0);				//设置液晶开始显示的指针位置
//  lcd.print("T: ");	//液晶显示“LM35 temp =”
//  lcd.print((int)temp/10);	//液晶显示温度整数值
//  lcd.print(".");						//液晶显示小数点
//  lcd.print((int)temp%10);	//液晶显示温度小数值
//  lcd.print((char)223);			//液晶显示“°”
//  lcd.print("C");						//液晶显示“C”
//  
//  // DHT11
//  chk = DHT.read11(DHT11);
//  lcd.setCursor(0,1);
//  switch(chk)
//  {
//     case DHTLIB_OK:
//         lcd.print("H: ");
//         lcd.print(DHT.humidity);
//         lcd.print(" T: ");
//         lcd.print(DHT.temperature);
//         break;
//      case DHTLIB_ERROR_CHECKSUM: 
//	 lcd.print("Checksum error."); 
//	 break;
//      case DHTLIB_ERROR_TIMEOUT: 
//	 lcd.print("Time out error."); 
//	 break;
//      default:
//         lcd.print("Unknown error..");
//         break;
//  }
//  
//  delay(1000);
}
